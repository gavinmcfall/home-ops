---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app audiobookshelf
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: volsync
      namespace: volsync-system
  values:
    controllers:
      audiobookshelf:
        pod:
          securityContext:
            runAsNonRoot: true
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
            seccompProfile: { type: RuntimeDefault }
        containers:
          app:
            image:
              repository: ghcr.io/advplyr/audiobookshelf
              tag: 2.17.2@sha256:9e0a204b39212726cd6739a05bb81ce1b4f48a0d238c8a977a6192adf59cc55f
            env:
              AUDIOBOOKSHELF_UID: 568
              AUDIOBOOKSHELF_GID: 568
              CONFIG_PATH: /config
              METADATA_PATH: /config/metadata
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthcheck
                    port: &port 80
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
              limits:
                memory: 1Gi
    service:
      app:
        controller: audiobookshelf
        ports:
          http:
            port: *port
    ingress:
      app:
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Entertainment
          gethomepage.dev/name: AudioBookShelf
          gethomepage.dev/app: *app
          gethomepage.dev/icon: audiobookshelf.png
          gethomepage.dev/description: Audiobook Library
          gethomepage.dev/widget.type: audiobookshelf
          gethomepage.dev/widget.url: http://audiobookshelf.entertainment:80
          gethomepage.dev/widget.key: "{{`{{HOMEPAGE_VAR_AUDIOBOOKSHELF_TOKEN}}`}}"
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
        className: external
        hosts:
          - host: audiobookshelf.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: audiobookshelf
      cache:
        type: emptyDir
        globalMounts:
          - path: /.npm
      media:
        type: nfs
        server: 10.90.1.69
        path: /mnt/storage0/media
        globalMounts:
          - path: /media # This is the path inside the container
            readOnly: false
