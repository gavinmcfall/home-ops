---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app fileflows
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  values:
    controllers:
      fileflows:
        pod:
          securityContext:
            runAsNonRoot: true
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
            seccompProfile: { type: RuntimeDefault }
        containers:
          app:
            image:
              repository: revenz/fileflows
              tag: 25.04:sha256:6f87a6468a888e0bc15e45b5c92d87f1bbc43caaf93b8b2c8610865d23d63731
            env:
              TZ: ${TIMEZONE}
              PUID: 568
              PGID: 568
            resources:
              requests:
                cpu: 20m
                memory: 128M
              limits:
                memory: 512M
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
    service:
      app:
        controller: fileflows
        ports:
          http:
            port: 5000
        devices:
          /dev/dri: /dev/dri

    ingress:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
        className: internal
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http

    persistence:
      data:
        existingClaim: *app
        globalMounts:
          - path: /app/Data
      tmp:
        type: emptyDir
        globalMounts:
          - path: /temp
      logs:
        existingClaim: fileflows-logs
        globalMounts:
          - path: /app/Logs
      media:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            path: /mnt/storage0/media/Library
            server: citadel.internal
        globalMounts:
          - path: /media/Library
            readOnly: false
