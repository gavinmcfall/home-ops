---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/refs/heads/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app fileflows
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  values:
    controllers:
      server:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          install-vaapi-drivers:
            image:
              repository: ubuntu
              tag: "24.04"
            command:
              - /bin/bash
              - -c
              - >
                apt-get update &&
                apt-get install -y --no-install-recommends intel-media-va-driver-non-free vainfo &&
                cp /usr/lib/x86_64-linux-gnu/dri/* /usr/lib/x86_64-linux-gnu/dri/
        pod:
          hostname: &name ff-server
        containers:
          *name : &container
            image:
              repository: ghcr.io/ant385525/fileflows
              tag: 25.4.6.5339@sha256:3d16dd49e6ad2ce3ecf0215b6b6347e330204ed838e2c6652a3e5d135b39c4ec
            env:
              TZ: ${TIMEZONE}
              PORT: &port 5000
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/status
                    port: *port
                  initialDelaySeconds: 5
                  periodSeconds: 5
                  failureThreshold: 5
              readiness: *probes
            resources:
              requests:
                cpu: 25m
                memory: 128M
              limits:
                memory: 12Gi
                gpu.intel.com/i915: 1
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
      node:
        pod:
          hostname: &name ff-node
        containers:
          *name :
            <<: *container
            probes:
              liveness: &probes
                enabled: false
              readiness: *probes
            env:
              FFNODE: 1
              ServerUrl: http://fileflows-server:5000

    ingress:
      server:
        className: internal
        annotations:
          external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: server
                  port: http

    service:
      server:
        controller: server
        ports:
          http:
            port: *port
      kube-bonds:
        controller: node
        ports:
          http:
            port: *port

    defaultPodOptions:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: Always
        runAsNonRoot: true
        seccompProfile: { type: RuntimeDefault }
        supplementalGroups: [44]

    persistence:
      config:
        existingClaim: *app
        advancedMounts:
          server:
            ff-server:
              - path: /app/Data
      node-data:
        type: emptyDir
        advancedMounts:
          node:
            ff-node:
              - path: /app/Data
      logs:
        enabled: true
        existingClaim: fileflows-logs
        advancedMounts:
          server:
            ff-server:
              - path: /app/Logs
                subPath: ff-server
          node:
            ff-node:
              - path: /app/Logs
                subPath: ff-node
      manually-added:
        existingClaim: fileflows-manually-added
        globalMounts:
          - path: /app/ManuallyAdded
      temp:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /temp
            subPath: temp
          # Mutex
          - path: /tmp
            subPath: tmp
      common:
        type: emptyDir
        globalMounts:
          - path: /app/common
      dockermods:
        type: emptyDir
        globalMounts:
          - path: /app/DockerMods
      plugins:
        type: emptyDir
        globalMounts:
          - path: /app/Plugins
      templates:
        type: emptyDir
        globalMounts:
          - path: /app/Templates
      i18n:
        type: emptyDir
        globalMounts:
          - path: /app/Server/wwwroot/i18n
      dri:
        hostPath: /dev/dri
        type: hostPath
      media:
        type: nfs
        server: citadel.internal
        path: /mnt/storage0/media
        globalMounts:
          - path: /media
      cache:
        type: nfs
        server: citadel.internal
        path: /mnt/storage0/cache
        globalMounts:
          - path: /cache
