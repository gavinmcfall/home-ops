---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app mylar
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: volsync
      namespace: volsync-system
  values:
    controllers:
      mylar:
        labels:
          nfsMount: "true"
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/linuxserver/mylar3
              tag: version-v0.8.0@sha256:81c7ad59fbb10fe7dc440e4d23ce2914b28ade4319f866b2fe88644a1c6b3b0c
            env:
              TZ: ${TIMEZONE}
              UID: 1000
              GID: 1000
            resources:
              requests:
                cpu: 15m
                memory: 700M
              limits:
                memory: 1200M
    # defaultPodOptions:
    #   securityContext:
    #     runAsNonRoot: true
    #     runAsUser: 568
    #     runAsGroup: 568
    #     fsGroup: 568
    #     fsGroupChangePolicy: OnRootMismatch
    #     supplementalGroups: [10000]
    #     seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: *app
        ports:
          http:
            port: 8090
    ingress:
      app:
        className: internal
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Downloads
          gethomepage.dev/name: Mylar
          gethomepage.dev/app: *app
          gethomepage.dev/icon: mylar.png
          gethomepage.dev/description: Comic Downloads
          gethomepage.dev/widget.type: mylar
          gethomepage.dev/widget.url: http://mylar.downloads:8090
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_MYLAR_TOKEN}}` }}"
          external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths: &paths
              - path: /
                service:
                  identifier: app
                  port: http
      tailscale:
        enabled: true
        className: tailscale
        hosts:
          - host: "{{ .Release.Name }}"
            paths: *paths
        tls:
          - hosts:
              - *app
    persistence:
      config:
        existingClaim: *app
      media:
        type: nfs
        server: citadel.internal
        path: /mnt/storage0/media
        globalMounts:
          - path: /media
