# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app romm
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  values:
    controllers:
      romm:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom: &envFrom
              - secretRef:
                  name: romm-secret
        containers:
          app:
            image:
              repository: ghcr.io/rommapp/romm
              tag: 3.7.3@sha256:45bfde6088e217b0f050064ca2146bbbf052a559112567cf129e17f52fd07f5b
            env:
              ROMM_DB_DRIVER: postgresql
              ROMM_BASE_PATH: /romm
              DISABLE_DOWNLOAD_ENDPOINT_AUTH: true
              ENABLE_SCHEDULED_RESCAN: "true"
              SCHEDULED_RESCAN_CRON: "0 3 * * *"
              ENABLE_SCHEDULED_UPDATE_SWITCH_TITLEDB: "false"
              ENABLE_SCHEDULED_UPDATE_MAME_XML: "false"
              ENABLE_RESCAN_ON_FILESYSTEM_CHANGE: "true"
              RESCAN_ON_FILESYSTEM_CHANGE_DELAY: 5
              DISABLE_USERPASS_LOGIN: false
              TZ: ${TIMEZONE}
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: &port 8080
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: ["ALL"]}
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 1Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [44, 10000]
        seccompProfile: {type: RuntimeDefault}
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    ingress:
      app:
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        type: configMap
        name: romm-config
        globalMounts:
          - path: /romm/config/config.yml
            subPath: config.yml
            readOnly: true
      assets:
        existingClaim: romm-assets
        globalMounts:
          - path: /romm/assets
            readOnly: false
      resources:
        existingClaim: romm-resources
        globalMounts:
          - path: /romm/resources
            readOnly: false
      tmp:
        type: emptyDir
        sizeLimit: 1Gi
      media:
        type: nfs
        server: citadel.internal
        path: /mnt/storage0/media/Library/Emulation/ROMS
        globalMounts:
          - path: /romm/library