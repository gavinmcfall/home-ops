---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: searxng
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
      strategy: rollback
  values:
    controllers:
      searxng:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: docker.io/searxng/searxng
              tag: 2025.4.3-4452358e8@sha256:89022adeacc9d6d023f32e961b6100f7dae16b75b2489501783c7564e945726e
            command: ["uwsgi", "--master", "--http-socket", "0.0.0.0:8080", "/usr/local/searxng/dockerfiles/uwsgi.ini"]
            env:
              TZ: ${TIMEZONE}
              SEARXNG_BASE_URL: https://search.${SECRET_DOMAIN}}
              SEARXNG_URL: https://search.${SECRET_DOMAIN}}
              SEARXNG_PORT: &httpPort 8080
              UWSGI_WORKERS: &cpu
                valueFrom:
                  resourceFieldRef:
                    containerName: app
                    resource: limits.cpu # not defined, so will use node allocatable
              UWSGI_THREADS: *cpu
            envFrom:
              - secretRef:
                  name: searxng-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthz
                    port: &port 8080
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
            resources:
              limits:
                memory: 2Gi

              requests:
                cpu: 10m
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
    defaultPodOptions:
      automountServiceAccountToken: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: searxng
        ports:
          http:
            port: *httpPort
    serviceMonitor:
      app:
        serviceName: searxng
        endpoints:
          - port: http
            scheme: http
            path: /metrics
            interval: 30s
            scrapeTimeout: 5s
            basicAuth:
              username:
                name: searxng-secret
                key: SEARXNG_OPEN_METRICS_USER
              password:
                name: searxng-secret
                key: SEARXNG_OPEN_METRICS_SECRET

    ingress:
      app:
        className: internal
        annotations:
          # nginx.ingress.kubernetes.io/auth-url: "https://oauth2-proxy.${SECRET_DOMAIN}/oauth2/auth"
          # nginx.ingress.kubernetes.io/auth-signin: "https://oauth2-proxy.${SECRET_DOMAIN}/oauth2/start?rd=$scheme://$host$request_uri"
          external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
          # nginx.ingress.kubernetes.io/auth-snippet: |
          #   if ($request_uri ~ "^/metrics$") {
          #     auth_request off;
          #   }
        hosts:
          - host: search.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        type: configMap
        name: searxng-config
        globalMounts:
          - path: /etc/searxng/settings.yml
            subPath: settings.yml
            readOnly: true
          - path: /etc/searxng/limiter.toml
            subPath: limiter.toml
            readOnly: true
      tmp:
        type: emptyDir
        globalMounts:
          - path: /etc/searxng
          - path: /tmp
