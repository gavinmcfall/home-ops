---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app immich-server
  namespace: home
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: dragonfly-operator
      namespace: database
  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: *app
    controllers:
      immich-server:
        type: statefulset
        annotations:
          configmap.reloader.stakater.com/reload: &configMap immich-configmap
          secret.reloader.stakater.com/reload: &secret immich-secret
        initContainers:
          01-init-db:
            envFrom: &envFrom
              - configMapRef:
                  name: *configMap
              - secretRef:
                  name: *secret
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: "17.4"
        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.132.3
            envFrom: *envFrom
            resources:
              requests:
                cpu: 100m
                memory: 250Mi
    service:
      main:
        controller: *app
        ports:
          http:
            port: 3001

    ingress:
      main:
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Home
          gethomepage.dev/name: Immich
          gethomepage.dev/app: *app
          gethomepage.dev/icon: immich
          gethomepage.dev/description: Photo Library
          gethomepage.dev/widget.type: immich
          gethomepage.dev/widget.url: photos.${SECRET_DOMAIN}
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_IMMICH_API_KEY}}` }}"
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
          nginx.ingress.kubernetes.io/proxy-body-size: "0"
          nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
        enabled: true
        className: external
        hosts:
          - host: &host photos.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: main
                  port: http

    persistence:
      library:
        enabled: true
        existingClaim: immich-nfs
        globalMounts:
          - path: /usr/src/app/upload
      geocoding-dump:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /usr/src/app/.reverse-geocoding-dump
      transformers-cache:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /usr/src/app/.transformers_cache
