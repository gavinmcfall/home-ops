planeVersion: stable

dockerRegistry:
  enabled: false
  host: "index.docker.io/v1/"
  loginid: ""
  password: ""

ingress:
  enabled: true
  appHost: "plane.example.com"
  minioHost: ""
  rabbitmqHost: ""
  ingressClass: "nginx"
  ingress_annotations: {"nginx.ingress.kubernetes.io/proxy-body-size": "5m"}

# SSL Configuration - Valid only if ingress.enabled is true
ssl:
  tls_secret_name: "" # If you have a custom TLS secret name
  # If you want to use Let's Encrypt, set createIssuer and generateCerts to true
  createIssuer: false
  issuer: "http" # Allowed : cloudflare, digitalocean, http
  token: "" # not required for http
  server: https://acme-v02.api.letsencrypt.org/directory
  email: plane@example.com
  generateCerts: false

redis:
  local_setup: true
  image: valkey/valkey:7.2.5-alpine
  servicePort: 6379
  storageClass: ""
  volumeSize: 100Mi
  pullPolicy: IfNotPresent
  assign_cluster_ip: false

postgres:
  local_setup: true
  image: postgres:15.7-alpine
  servicePort: 5432
  storageClass: ""
  volumeSize: 1Gi
  pullPolicy: IfNotPresent
  assign_cluster_ip: false

rabbitmq:
  local_setup: true
  image: rabbitmq:3.13.6-management-alpine
  pullPolicy: IfNotPresent
  servicePort: 5672
  managementPort: 15672
  storageClass: ""
  volumeSize: 100Mi
  default_user: plane
  default_password: plane
  external_rabbitmq_url: ''
  assign_cluster_ip: false

minio:
  image: minio/minio:latest
  image_mc: minio/mc:latest
  local_setup: true
  pullPolicy: IfNotPresent
  root_password: password
  root_user: admin
  storageClass: ""
  volumeSize: 1Gi
  assign_cluster_ip: false
  env:
   minio_endpoint_ssl: false

web:
  replicas: 1
  memoryLimit: 1000Mi
  cpuLimit: 500m
  cpuRequest: 50m
  memoryRequest: 50Mi
  image: artifacts.plane.so/makeplane/plane-frontend
  pullPolicy: Always
  assign_cluster_ip: false

space:
  replicas: 1
  memoryLimit: 1000Mi
  cpuLimit: 500m
  cpuRequest: 50m
  memoryRequest: 50Mi
  image: artifacts.plane.so/makeplane/plane-space
  pullPolicy: Always
  assign_cluster_ip: false

admin:
  replicas: 1
  memoryLimit: 1000Mi
  cpuLimit: 500m
  cpuRequest: 50m
  memoryRequest: 50Mi
  image: artifacts.plane.so/makeplane/plane-admin
  pullPolicy: Always
  assign_cluster_ip: false

live:
  replicas: 1
  memoryLimit: 1000Mi
  cpuLimit: 500m
  cpuRequest: 50m
  memoryRequest: 50Mi
  image: artifacts.plane.so/makeplane/plane-live
  pullPolicy: Always
  assign_cluster_ip: false

api:
  replicas: 1
  memoryLimit: 1000Mi
  cpuLimit: 500m
  cpuRequest: 50m
  memoryRequest: 50Mi
  image: artifacts.plane.so/makeplane/plane-backend
  pullPolicy: Always
  assign_cluster_ip: false

worker:
  replicas: 1
  memoryLimit: 1000Mi
  cpuLimit: 500m
  cpuRequest: 50m
  memoryRequest: 50Mi
  image: artifacts.plane.so/makeplane/plane-backend
  pullPolicy: Always

beatworker:
  replicas: 1
  memoryLimit: 1000Mi
  cpuLimit: 500m
  cpuRequest: 50m
  memoryRequest: 50Mi
  image: artifacts.plane.so/makeplane/plane-backend
  pullPolicy: Always

external_secrets:
  # Name of the existing Kubernetes Secret resource; see README for more details
  rabbitmq_existingSecret: '' 
  pgdb_existingSecret: ''
  doc_store_existingSecret: ''
  app_env_existingSecret: ''
  live_env_existingSecret: ''

env:

  # NEXT_PUBLIC_DEPLOY_URL:  ""
  # REDIS
  remote_redis_url: "" #INCASE OF REMOTE REDIS ONLY
  
  # POSTGRES DB VALUES
  pgdb_username: plane
  pgdb_password: plane
  pgdb_name: plane
  pgdb_remote_url: "" #INCASE OF REMOTE PG DB URL ONLY

  # DATA STORE
  docstore_bucket: "uploads"
  doc_upload_size_limit: "5242880" # 5MB

  # REQUIRED IF MINIO LOCAL SETUP IS FALSE
  aws_access_key: ""
  aws_secret_access_key: ""
  aws_region: ""
  aws_s3_endpoint_url: ""

  secret_key: "60gp0byfz2dvffa45cxl20p1scy9xbpf6d8c5y0geejgkyp1b5"

  sentry_dsn: ""
  sentry_environment: ""

  cors_allowed_origins: ""
  default_cluster_domain: cluster.local

  live_sentry_dsn: ""
  live_sentry_environment: ""
  live_sentry_traces_sample_rate: ""

  api_key_rate_limit: "60/minute"

